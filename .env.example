# .env.example
# This file contains example environment variables for the HomeSer project.
# Copy this file to .env and update the values for your specific environment.

# ======================================
# DJANGO CORE SETTINGS
# ======================================

# Security settings
# Generate a new secret key: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-super-secret-django-key-here

# Debug mode (True or False)
# Set to False in production
DEBUG=True

# Hosts allowed to access the application (comma-separated)
# For local development: localhost,127.0.0.1
# For Vercel deployment: your-project.vercel.app,your-custom-domain.com
ALLOWED_HOSTS=localhost,127.0.0.1,.vercel.app

# CSRF Trusted Origins (comma-separated list of trusted origins for CSRF protection)
# For local development: http://localhost:8000,http://127.0.0.1:8000
# For Vercel deployment: https://your-project.vercel.app,https://your-custom-domain.com
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# CORS Allowed Origins (comma-separated list of origins allowed to make cross-origin requests)
# For local development: http://localhost:8000,http://127.0.0.1:8000
# For Vercel deployment: https://your-project.vercel.app,https://your-custom-domain.com
CORS_ALLOWED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# ======================================
# DATABASE CONFIGURATION
# ======================================

# Database URL (using django-environ)
# Leave empty to use SQLite (default for development)
# Example for PostgreSQL: postgres://user:password@host:port/database_name
# For Vercel deployment with Supabase: postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres
DATABASE_URL=

# ======================================
# CLOUDINARY SETTINGS (for media storage)
# ======================================

# Leave empty to use local file storage (default for development)
# Sign up at https://cloudinary.com/ for production credentials
# Format for CLOUDINARY_URL: cloudinary://api_key:api_secret@cloud_name
# For Vercel deployment: cloudinary://[API-Key]:[API-Secret]@[Cloud-Name]
CLOUDINARY_URL=

# ======================================
# REDIS SETTINGS (for caching & sessions)
# ======================================

# Leave empty to use local memory cache (default for development)
# Sign up at https://upstash.com/ for a free Redis instance for production
# Format: redis://username:password@host:port/database
# For Vercel deployment with Upstash: redis://default:[PASSWORD]@[ENDPOINT]:[PORT]
REDIS_URL=

# Cache timeout in seconds (default: 900 seconds / 15 minutes)
CACHE_TTL=900

# Session cookie age in seconds (default: 1209600 seconds / 2 weeks)
SESSION_COOKIE_AGE=1209600

# ======================================
# EMAIL SETTINGS
# ======================================

# For sending real emails, configure the following settings
# For Gmail, you need to use an App Password, not your regular password
# 1. Enable 2-Factor Authentication on your Google account
# 2. Generate an App Password for "Mail" at https://myaccount.google.com/apppasswords
# 3. Use the 16-character app password below
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-16-character-app-password
# EMAIL_USE_TLS=True
# DEFAULT_FROM_EMAIL=your-email@gmail.com

# If EMAIL_HOST_USER and EMAIL_HOST_PASSWORD are not set, emails will be printed to console

# ======================================
# AUTHENTICATION SETTINGS (SimpleJWT)
# ======================================

# JWT Access Token Lifetime in minutes (default: 60)
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=60

# JWT Refresh Token Lifetime in days (default: 1)
JWT_REFRESH_TOKEN_LIFETIME_DAYS=1

# ======================================
# SERVERLESS SETTINGS
# ======================================

# Enable serverless mode optimizations (automatically set by Vercel)
SERVERLESS=1
