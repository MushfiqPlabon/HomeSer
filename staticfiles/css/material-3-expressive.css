/* Material 3 Expressive Animations for HomeSer */

:root {
  /* Material 3 Expressive Easing Functions */
  --md-standard-easing: cubic-bezier(0.2, 0, 0, 1);
  --md-emphasized-easing: cubic-bezier(0.3, 0, 0.8, 0.15);
  --md-decelerated-easing: cubic-bezier(0, 0, 0.2, 1);
  --md-accelerated-easing: cubic-bezier(0.4, 0, 1, 1);
  
  /* Material 3 Expressive Durations */
  --md-duration-short: 100ms;
  --md-duration-medium: 250ms;
  --md-duration-long: 300ms;
  --md-duration-xlong: 400ms;
  
  /* Material 3 Expressive States */
  --state-pressed: 0.92;
  --state-hover: 1.02;
  --state-focus: 1.04;
}

/* Material 3 Expressive Base Classes */
.material-3-expressive {
  /* Prepare elements for expressive animations */
  will-change: transform, opacity, box-shadow;
  transform-origin: center;
}

/* === Material 3 Expressive Microinteractions === */

/* Button Microinteractions */
.m3-button {
  position: relative;
  overflow: hidden;
  transform-origin: center;
  transition: none; /* Let Anime.js handle transitions */
}

/* State Layer for Buttons */
.m3-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: currentColor;
  opacity: 0;
  pointer-events: none;
  border-radius: inherit;
}

/* Pressed State */
.m3-button.pressed {
  animation: m3-press-animation var(--md-duration-short) var(--md-accelerated-easing);
}

@keyframes m3-press-animation {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(var(--state-pressed));
  }
  100% {
    transform: scale(1);
  }
}

/* Hover State */
.m3-button.hovered {
  animation: m3-hover-animation var(--md-duration-medium) var(--md-decelerated-easing);
}

@keyframes m3-hover-animation {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(var(--state-hover));
  }
}

/* Focus State */
.m3-button.focused {
  animation: m3-focus-animation var(--md-duration-medium) var(--md-decelerated-easing);
}

@keyframes m3-focus-animation {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(var(--state-focus));
  }
}

/* === Material 3 Expressive Container Transform === */

.m3-container-transform {
  transform-origin: center;
  transition: none;
}

.m3-container-transform.entering {
  animation: m3-container-enter var(--md-duration-xlong) var(--md-emphasized-easing);
}

.m3-container-transform.exiting {
  animation: m3-container-exit var(--md-duration-long) var(--md-accelerated-easing);
}

@keyframes m3-container-enter {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes m3-container-exit {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.8);
  }
}

/* === Material 3 Expressive Shared Axis === */

.m3-shared-axis-x {
  transform-origin: center;
  transition: none;
}

.m3-shared-axis-x.entering {
  animation: m3-shared-axis-x-enter var(--md-duration-long) var(--md-emphasized-easing);
}

.m3-shared-axis-x.exiting {
  animation: m3-shared-axis-x-exit var(--md-duration-medium) var(--md-accelerated-easing);
}

@keyframes m3-shared-axis-x-enter {
  0% {
    opacity: 0;
    transform: translateX(20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes m3-shared-axis-x-exit {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-20px);
  }
}

/* === Material 3 Expressive Fade Through === */

.m3-fade-through {
  transition: none;
}

.m3-fade-through.entering {
  animation: m3-fade-through-enter var(--md-duration-medium) var(--md-decelerated-easing);
}

.m3-fade-through.exiting {
  animation: m3-fade-through-exit var(--md-duration-short) var(--md-accelerated-easing);
}

@keyframes m3-fade-through-enter {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes m3-fade-through-exit {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* === Material 3 Expressive Elevation Transition === */

.m3-elevated-card {
  transition: none;
}

.m3-elevated-card:hover {
  animation: m3-elevation-hover var(--md-duration-medium) var(--md-standard-easing);
}

@keyframes m3-elevation-hover {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-4px);
  }
}

/* === Material 3 Expressive Ripple Effect === */

.m3-ripple {
  position: absolute;
  border-radius: 50%;
  transform: scale(0);
  pointer-events: none;
  animation: m3-ripple-animation var(--md-duration-medium) var(--md-standard-easing);
}

@keyframes m3-ripple-animation {
  to {
    transform: scale(2);
    opacity: 0;
  }
}

/* === Material 3 Expressive Icon Animations === */

.m3-icon-button {
  transition: none;
}

.m3-icon-button:hover .m3-icon {
  animation: m3-icon-hover var(--md-duration-short) var(--md-standard-easing);
}

.m3-icon-button:active .m3-icon {
  animation: m3-icon-press var(--md-duration-short) var(--md-accelerated-easing);
}

@keyframes m3-icon-hover {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes m3-icon-press {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

/* === Material 3 Expressive Feedback States === */

/* Success Feedback */
.m3-success-feedback {
  animation: m3-success-pulse var(--md-duration-medium) var(--md-emphasized-easing);
}

@keyframes m3-success-pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(57, 255, 20, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(57, 255, 20, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(57, 255, 20, 0);
  }
}

/* Error Feedback */
.m3-error-feedback {
  animation: m3-error-shake var(--md-duration-medium) var(--md-standard-easing);
}

@keyframes m3-error-shake {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}

/* Focus Ring */
.m3-focus-ring {
  animation: m3-focus-pulse var(--md-duration-short) var(--md-standard-easing);
}

@keyframes m3-focus-pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(0, 255, 255, 0.5);
  }
  100% {
    box-shadow: 0 0 0 4px rgba(0, 255, 255, 0.3);
  }
}

/* === Material 3 Expressive Staggered Animations === */

.m3-staggered-item {
  opacity: 0;
  transform: translateY(20px);
}

.m3-staggered-item.animate {
  animation: m3-staggered-enter var(--md-duration-medium) var(--md-decelerated-easing);
}

@keyframes m3-staggered-enter {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* === Material 3 Expressive Loading States === */

.m3-loading-skeleton {
  position: relative;
  overflow: hidden;
}

.m3-loading-skeleton::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
  animation: m3-loading-shimmer 1.5s infinite;
}

@keyframes m3-loading-shimmer {
  to {
    left: 100%;
  }
}

/* === Material 3 Expressive Progress Indicators === */

.m3-linear-progress {
  height: 4px;
  background: rgba(255,255,255,0.1);
  overflow: hidden;
}

.m3-linear-progress-bar {
  height: 100%;
  width: 0;
  background: var(--neon-green);
  animation: m3-progress-indeterminate 2s infinite linear;
}

@keyframes m3-progress-indeterminate {
  0% {
    width: 0;
    margin-left: 0;
  }
  50% {
    width: 100%;
    margin-left: 0;
  }
  100% {
    width: 100%;
    margin-left: 100%;
  }
}

/* === Material 3 Expressive Notification Toasts === */

.m3-toast {
  transform-origin: bottom center;
  transition: none;
}

.m3-toast.entering {
  animation: m3-toast-enter var(--md-duration-medium) var(--md-decelerated-easing);
}

.m3-toast.exiting {
  animation: m3-toast-exit var(--md-duration-medium) var(--md-accelerated-easing);
}

@keyframes m3-toast-enter {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes m3-toast-exit {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(100%);
  }
}

/* === Material 3 Expressive Form Field States === */

.m3-form-field {
  transition: none;
}

.m3-form-field.focused {
  animation: m3-field-focus var(--md-duration-short) var(--md-decelerated-easing);
}

.m3-form-field.error {
  animation: m3-field-error var(--md-duration-medium) var(--md-standard-easing);
}

@keyframes m3-field-focus {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-2px);
  }
}

@keyframes m3-field-error {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-3px);
  }
  75% {
    transform: translateX(3px);
  }
}

/* === Material 3 Expressive Emoji Reactions === */

.m3-emoji-reaction {
  transition: none;
}

.m3-emoji-reaction:hover {
  animation: m3-emoji-hover var(--md-duration-short) var(--md-standard-easing);
}

.m3-emoji-reaction:active {
  animation: m3-emoji-press var(--md-duration-short) var(--md-accelerated-easing);
}

.m3-emoji-reaction.selected {
  animation: m3-emoji-select var(--md-duration-medium) var(--md-emphasized-easing);
}

@keyframes m3-emoji-hover {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes m3-emoji-press {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes m3-emoji-select {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.3);
  }
  60% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

/* Utility Classes for Expressive Animations */
.animate-expressive {
  will-change: transform, opacity, box-shadow;
}

.transition-expressive {
  transition: transform var(--md-duration-medium) var(--md-standard-easing),
              opacity var(--md-duration-medium) var(--md-standard-easing),
              box-shadow var(--md-duration-medium) var(--md-standard-easing);
}